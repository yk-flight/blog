<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrkizzy.data.mapper.UserMapper">

    <sql id="base_column">
        id, username, password, nickname, avatar, status, remark, create_time, update_time
    </sql>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zrkizzy.data.domain.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="avatar" property="avatar" />
        <result column="nickname" property="nickname" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <resultMap id="UserWithRole" type="com.zrkizzy.data.domain.User" extends="BaseResultMap">
        <collection property="roles" ofType="com.zrkizzy.data.domain.Role">
            <id column="role_id" property="id" />
            <result column="role_name" property="name" />
            <result column="role_mark" property="mark" />
            <result column="description" property="description" />
            <result column="role_create_time" property="createTime" />
            <result column="role_update_time" property="updateTime" />
        </collection>
    </resultMap>

    <resultMap id="UserVO" type="com.zrkizzy.data.vo.UserVO">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="avatar" property="avatar" />
        <result column="nickname" property="nickname" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
        <result column="roles" property="roles" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 获取用户对象 -->
    <select id="getUserByUsername" resultMap="UserWithRole">
        SELECT
            u.id,
            username,
            password,
            nickname,
            avatar,
            status,
            remark,
            u.create_time,
            u.update_time,
            r.id AS role_id,
            r.name AS role_name,
            r.mark AS role_mark,
            r.description AS description,
            r.create_time AS role_create_time,
            r.update_time AS role_update_time
        FROM
            tb_user u
        LEFT JOIN
                tb_user_role ur
            ON u.id = ur.user_id
        LEFT JOIN
                tb_role r
            ON ur.role_id = r.id
        WHERE
            username = #{username}
    </select>

    <!-- 根据用户ID获取用户对象 -->
    <select id="getUserByUserId" resultMap="UserWithRole">
        SELECT
            u.id,
            username,
            password,
            nickname,
            avatar,
            status,
            remark,
            u.create_time,
            u.update_time,
            r.id AS role_id,
            r.mark AS role_mark,
            r.name AS role_name,
            r.description AS description,
            r.create_time AS role_create_time,
            r.update_time AS role_update_time
        FROM
            tb_user u
        LEFT JOIN
                tb_user_role ur
            ON u.id = ur.user_id
        LEFT JOIN
                tb_role r
            ON ur.role_id = r.id
        WHERE
            u.id = #{userId}
    </select>

    <!-- 用户选项 -->
    <resultMap id="userOptions" type="com.zrkizzy.common.base.response.OptionsVO">
        <id column="id" property="value" />
        <result column="nickname" property="label" />
    </resultMap>

    <!-- 获取用户选项集合 -->
    <select id="listUserOptions" resultMap="userOptions">
        SELECT id, nickname FROM tb_user;
    </select>

    <!-- 获取所有用户 -->
    <select id="listUsers" resultMap="UserVO">
        SELECT
            u.id AS id,
            username,
            nickname,
            avatar,
            status,
            remark,
            r.mark AS roles,
            u.create_time AS create_time,
            u.update_time AS update_time
        FROM tb_user u
        LEFT JOIN tb_user_role ur
            ON u.id = ur.user_id
        LEFT JOIN tb_role r
            ON ur.role_id = r.id
        <where>
            <if test="null != userQuery.username and '' != userQuery.username">
                AND u.username = #{userQuery.username}
            </if>
            <if test="null != userQuery.status">
                AND u.status = #{userQuery.status}
            </if>
            <if test="null != userQuery.dataRange and 2 == userQuery.dataRange.size">
                AND u.create_time BETWEEN #{userQuery.dataRange[0]} AND #{userQuery.dataRange[1]}
            </if>
        </where>
    </select>

    <!-- 更新用户头像 -->
    <update id="updateUserAvatar">
        UPDATE tb_user SET avatar = #{src} WHERE id = #{userId}
    </update>
</mapper>